@import 'variables';

@mixin box-shadow () {
  box-shadow: 0 0.4rem 1rem 0 rgba(0, 0, 0, 0.15);
}
@mixin respond-to($media) {
  @if $media == xsmall {
    @media only screen and (max-width: $x-small - 1px) {
      @content;

    }
  }

  @else if $media == small {
    @media only screen and (max-width: $small - 1px) {
      @content;
    }
  }
  @else if $media == tablet {
    @media only screen and (max-width: $tablet - 1px) {
      @content;
    }
  }
  @else if $media == medium {
    @media only screen and (max-width: $medium) {
      @content;
    }
  }
  @else if $media == xmedium {
    @media only screen and (max-width: $x-medium - 1px) {
      @content;
    }
  }
  @else if $media == large {
    @media only screen and (max-width: $large - 1px) {
      @content;
    }
  }
  @else if $media == xlarge {
    @media only screen and (max-width: $x-large - 1px) {
      @content;
    }
  }
  @else {
    @media only screen and (max-width: $media) {
      @content;
    }
  }
}
@mixin respond-to-height($media) {
  @media only screen and (max-height: $media) {
    @content;
  }
}
@mixin respond-to-custom($media) {
  @media only screen and (max-width: $media) {
    @content;
  }
}

@mixin skeleton-ellipsis(
  $line-height: 1.5,
  $line-count: 2,
  $strict: false,
  $bg-color: white,
  $width: 4ch
) {
  $max-height: $line-height * $line-count;

  overflow: hidden;
  position: relative;
  line-height: $line-height;
  max-height: $max-height;
  white-space: normal;
  word-break: normal;
  text-overflow: ellipsis;

  @if ($strict) {
    height: $max-height;
  }

  &:after {
    content: '';
    position: absolute;
    display: block;
    right: 0;
    bottom: 0;
    width: $width;
    height: $line-height;
    background: linear-gradient(to right, #ffffff00 0%, $bg-color 88%);
  }
}

@mixin text-gradient($color: $col-gradient) {
  background: $color;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  -webkit-box-decoration-break: clone;
}

@mixin multi-line-ellipsis($line-count: 2) {
  display: -webkit-inline-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line-count;
  overflow: hidden;
}

@mixin extra-wide-text {
  font-weight: 800;
  font-size: 4.4rem;
  line-height: 151.5%;

  @include respond-to-custom($sidebar-hide-bp) {
    font-size: 2.4rem;
  }
}

@mixin extra-wide-outlined-text($color: $col-text, $stroke-width: 0.15rem) {
  font-weight: 800;
  font-size: 6.4rem;
  line-height: 1;
  -webkit-text-stroke-width: $stroke-width;
  -webkit-text-stroke-color: $color;
  color: transparent;

  @include respond-to-custom($sidebar-hide-bp) {
    font-size: 4.4rem;
  }
}


@mixin secondary-text {
  font-family: $font-family-secondary;
  font-weight: 300;
}

@mixin secondary-text-small {
  font-size: 1.4rem;

  @include secondary-text();
}

@mixin description-text {
  font-family: $font-family-main;
  font-size: 1.4rem;
  line-height: 1.15;
  color: $col-text-secondary;
}

@mixin icon-size($size) {
  min-width: $size;
  min-height: $size;
  width: $size;
  height: $size;
}

@mixin label-font-sizes {
  font-weight: 700;
  font-size: 1.6rem;
  line-height: 1.2;
}

@mixin text-font-sizes {
  font-size: 1.6rem;
  line-height: 1.2;
}

@mixin material-border($color-focused, $color-unfocused, $focused-selector:'') {
  border: 0.1rem solid $color-unfocused;
  border-radius: 0.6rem;
  -webkit-transition-property: border-color;
  -moz-transition-property: border-color;
  -ms-transition-property: border-color;
  -o-transition-property: border-color;
  transition-property: border-color;
  transition-duration: $field-transition-duration;

  @if $focused-selector != '' {
    #{$focused-selector},
    &:focus {
      border: 0.1rem solid $color-focused;
    }
  }

  @else {
    &:focus {
      border: 0.1rem solid $color-focused;
    }
  }
}